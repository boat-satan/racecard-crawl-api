name: Fetch Official Odds3T & Results (All tracks)

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      DATE:
        description: "対象日 (YYYYMMDD)"
        required: true
        type: string
      PIDS:
        description: "場コード: 'all' または CSV (例: 01,05,12)"
        required: false
        default: "all"
        type: string
      RACES:
        description: "レース: '1..12' または CSV (例: 1,3,5)"
        required: false
        default: "1..12"
        type: string
      SKIP_EXISTING:
        description: "既存JSONがあればスキップ"
        required: false
        default: "true"
        type: choice
        options: ["true","false"]

concurrency:
  group: odds-results-${{ inputs.DATE }}
  cancel-in-progress: false

jobs:
  fetch-all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      - name: Install deps
        run: npm i --no-audit --no-fund cheerio

      - name: Fetch Odds3T & Results (loop all PIDs/RACES)
        env:
          DATE: ${{ inputs.DATE }}
          IN_PIDS: ${{ inputs.PIDS }}
          IN_RACES: ${{ inputs.RACES }}
          SKIP_EXISTING: ${{ inputs.SKIP_EXISTING }}
        run: |
          set -e
          echo "[info] DATE=$DATE PIDS=$IN_PIDS RACES=$IN_RACES SKIP_EXISTING=$SKIP_EXISTING"

          # ---- expand PIDS
          if [ "$IN_PIDS" = "all" ] || [ -z "$IN_PIDS" ]; then
            PIDS=$(seq -w 1 24)
          else
            PIDS=""
            IFS=',' read -ra ARR <<< "$IN_PIDS"
            for x in "${ARR[@]}"; do
              n=$(printf "%d" "$x" 2>/dev/null || true)
              if [ -z "$n" ]; then n="$x"; fi
              PIDS="$PIDS $(printf "%02d" "$n")"
            done
          fi

          # ---- expand RACES
          if [ "$IN_RACES" = "1..12" ] || [ "$IN_RACES" = "all" ] || [ -z "$IN_RACES" ]; then
            RACES=$(seq 1 12)
          else
            if echo "$IN_RACES" | grep -Eq '^[0-9]+[.][.][0-9]+$'; then
              a=$(echo "$IN_RACES" | sed -E 's/^([0-9]+)[.][.]([0-9]+)$/\1/')
              b=$(echo "$IN_RACES" | sed -E 's/^([0-9]+)[.][.]([0-9]+)$/\2/')
              if [ "$a" -le "$b" ]; then
                RACES=$(seq "$a" "$b")
              else
                RACES=$(seq "$b" "$a")
              fi
            else
              RACES=""
              IFS=',' read -ra ARR <<< "$IN_RACES"
              for r in "${ARR[@]}"; do
                rnum=$(printf "%d" "$r" 2>/dev/null || true)
                if [ -n "$rnum" ]; then RACES="$RACES $rnum"; fi
              done
            fi
          fi

          echo "[info] expand -> PIDS:$PIDS"
          echo "[info] expand -> RACES:$RACES"

          # ---- run scrapers
          ok_odds=0; ng_odds=0; ok_res=0; ng_res=0
          for pid in $PIDS; do
            for r in $RACES; do
              echo "[run][odds]  ${DATE} pid=${pid} race=${r}"
              if SKIP_EXISTING=$SKIP_EXISTING node scripts/fetch-odds-official-3t.js "$DATE" "$pid" "$r"; then
                ok_odds=$((ok_odds+1))
              else
                ng_odds=$((ng_odds+1))
              fi
              sleep 0.6

              echo "[run][result] ${DATE} pid=${pid} race=${r}"
              if SKIP_EXISTING=$SKIP_EXISTING node scripts/fetch-result-official.js "$DATE" "$pid" "$r"; then
                ok_res=$((ok_res+1))
              else
                ng_res=$((ng_res+1))
              fi
              sleep 0.6
            done
          done
          echo "[done] odds_ok=$ok_odds odds_ng=$ng_odds result_ok=$ok_res result_ng=$ng_res"

      - name: List outputs (odds & results)
        run: |
          echo "::group::odds"
          find "public/odds/v1/${{ inputs.DATE }}" -type f -name "*.json" -printf "%P\n" 2>/dev/null || true
          echo "::endgroup::"
          echo "::group::results"
          find "public/results/v1/${{ inputs.DATE }}" -type f -name "*.json" -printf "%P\n" 2>/dev/null || true
          echo "::endgroup::"

      - name: Commit & push (if changed)
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "no changes"
          else
            git commit -m "odds3t+results: ${{ inputs.DATE }} pids=${{ inputs.PIDS }} races=${{ inputs.RACES }}"
            git pull --rebase
            git push
          fi