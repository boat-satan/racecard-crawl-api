name: Build TENKAI labels

on:
  workflow_dispatch:
    inputs:
      date:
        description: '対象日 (YYYYMMDD)'
        required: true
      pid:
        description: '場コード pid (例: 02)'
        required: true
      race:
        description: 'レース (例: 1R) 空/ALL/全部なら1R..12R全部'
        required: false
        default: ''

permissions:
  contents: write

concurrency:
  group: tenkai-labels-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      - name: Sanity check
        run: |
          test -f TENKAI/build_labels.py || { echo "TENKAI/build_labels.py がありません"; exit 1; }

      - name: Ensure TENKAI package dir
        run: |
          mkdir -p TENKAI
          [ -f TENKAI/__init__.py ] || : > TENKAI/__init__.py

      - name: Build labels (supports ALL)
        shell: bash
        run: |
          set -euo pipefail
          DATE="${{ github.event.inputs.date }}"
          PID="${{ github.event.inputs.pid }}"
          RACE="${{ github.event.inputs.race }}"
          # 空欄 / ALL / 全部 → 全R
          if [[ -z "${RACE}" || "${RACE,,}" == "all" || "${RACE}" == "全部" ]]; then
            RACE_OPT=""
            echo ">>> race: ALL (1R..12R を処理)"
          else
            RACE_OPT="--race ${RACE}"
            echo ">>> race: ${RACE}"
          fi
          echo ">>> cmd: python TENKAI/build_labels.py --date ${DATE} --pid ${PID} ${RACE_OPT}"
          PYTHONPATH="." python TENKAI/build_labels.py --date "${DATE}" --pid "${PID}" ${RACE_OPT}

      - name: Commit outputs
        shell: bash
        run: |
          set -euo pipefail
          OUTDIR="TENKAI/labels/v1/${{ github.event.inputs.date }}/${{ github.event.inputs.pid }}"
          echo ">>> OUTDIR=${OUTDIR}"
          if [ -d "${OUTDIR}" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git fetch --all --prune || true
            git pull --rebase || true
            git add "${OUTDIR}/"** || true
            git diff --cached --quiet || git commit -m "TENKAI labels: ${{ github.event.inputs.date }} pid=${{ github.event.inputs.pid }} ${{ github.event.inputs.race || 'ALL' }}"
            git push || git push --force-with-lease
          else
            echo "no outputs under ${OUTDIR}; skip commit"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tenkai-labels-${{ github.event.inputs.date }}-${{ github.event.inputs.pid }}${{ github.event.inputs.race && format('-{0}', github.event.inputs.race) || '-ALL' }}
          path: TENKAI/labels/v1/${{ github.event.inputs.date }}/${{ github.event.inputs.pid }}/**
          if-no-files-found: warn
