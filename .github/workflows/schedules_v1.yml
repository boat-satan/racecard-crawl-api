name: schedules_v1

on:
  workflow_dispatch:
    inputs:
      date:
        description: "YYYYMMDD（空なら programs/v2 配下の全日付をビルド）"
        required: false
  schedule:
    - cron: "00 22 * * *"  # JST 07:00

# github-actions[bot] に書き込み権限を付与
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true   # GITHUB_TOKEN を push に使う
          fetch-depth: 0              # rebaseに必須（履歴が必要）

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build schedules (single date or scan all)
        run: |
          python -m pip install -U pip
          if [ -z "${{ github.event.inputs.date }}" ]; then
            python scripts/schedules_build_all.py
          else
            python scripts/schedules_build.py --date "${{ github.event.inputs.date }}"
          fi

      - name: Commit & push with rebase
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 現在のブランチ名（例: main）
          BRANCH="$(git rev-parse --abbrev-ref HEAD)"

          # 先に最新を取り込む（他ジョブ更新対策）
          git fetch origin "$BRANCH"
          git pull --rebase origin "$BRANCH" || {
            echo "::warning::Rebase failed; will fall back to creating a PR branch."
            FALLBACK=1
          }

          git add public/schedules/v1/
          git commit -m "schedules_v1 build" || echo "no changes to commit"

          if [ "${FALLBACK:-0}" -eq 0 ]; then
            # rebase成功→そのままpush
            git push origin "HEAD:${BRANCH}"
          else
            # 競合などでrebase失敗→安全に別ブランチへpush（PR運用）
            SAFE_BRANCH="bot/schedules-v1-${{ github.run_id }}"
            git checkout -b "$SAFE_BRANCH"
            git push -u origin "$SAFE_BRANCH"

            echo "::notice::Opened branch $SAFE_BRANCH for PR (rebase failed)."
            echo "To merge: create a PR from $SAFE_BRANCH to $BRANCH."
          fi
