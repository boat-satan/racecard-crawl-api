name: sims_integrated

on:
  workflow_dispatch:
    inputs:
      DATE:   { description: "YYYYMMDD", required: true,  type: string }
      PID:    { description: "場コード 01..24（カンマ可）", required: true, type: string }
      MODE:   { description: "predict or eval", required: true, default: "predict", type: choice, options: [predict, eval] }
      SIMS:   { description: "試行回数/レース", required: true, default: "600", type: string }
      TOPN:   { description: "trifecta_topN", required: true, default: "18", type: string }
      UNIT:   { description: "1点あたり(円)", required: true, default: "100", type: string }
      REQUIRE_ODDS: { description: "オッズ必須（eval時）", required: false, default: "false", type: choice, options: [false, true] }
      KEYMAN_ENABLE: { description: "pass2有効", required: false, default: "true", type: choice, options: [true, false] }
      FILTERS:
        description: "フィルタまとめ入力 (例: MIN_EV=1.5,ODDS_BANDS=01-19,KEYMAN_THR=0.7,KEYMAN_BOOST=0.15,KEYMAN_AGGR=0.3)"
        required: false
        default: ""
        type: string

permissions:
  contents: write

concurrency:
  group: sims-integrated-${{ github.ref }}-${{ inputs.DATE }}-${{ inputs.PID }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas

      # 1) Pass1（キーマン抽出だけ）
      - name: Run Pass1 (keyman only)
        env:
          DATE:  ${{ inputs.DATE }}
          PID:   ${{ inputs.PID }}
          SIMS:  ${{ inputs.SIMS }}
          TOPN:  ${{ inputs.TOPN }}
          UNIT:  ${{ inputs.UNIT }}
        run: |
          set -euo pipefail
          echo "[pass1] DATE=$DATE PID=$PID"
          python scripts/sims/sims.py \
            --base public \
            --dates "$DATE" \
            --pids "$PID" \
            --sims "$SIMS" \
            --topn "$TOPN" \
            --predict-only \
            --outdir scripts/sims

      # 2) ML推論（TENKAI）
      - name: Run TENKAI prediction (generate CSVs)
        env:
          DATE: ${{ inputs.DATE }}
          PID:  ${{ inputs.PID }}
        run: |
          set -euo pipefail
          OUT_DIR="TENKAI/predictions/v1/$DATE"
          mkdir -p "$OUT_DIR"
          echo "[tenkai] generate predictions for $DATE / $PID"
          python TENKAI/tenkai_predict_integrated.py \
            --date "$DATE" --pids "$PID" \
            --out "TENKAI/predictions/v1"

      - name: Show ML files
        run: |
          echo "ML outputs:"
          find TENKAI/predictions/v1/${{ inputs.DATE }} -maxdepth 2 -type f -name '*.csv' | sort

      # 3) Pass2（ML統合）
      - name: Run Pass2 (SimS integrated with ML)
        env:
          DATE:  ${{ inputs.DATE }}
          PID:   ${{ inputs.PID }}
          MODE:  ${{ inputs.MODE }}
          SIMS:  ${{ inputs.SIMS }}
          TOPN:  ${{ inputs.TOPN }}
          UNIT:  ${{ inputs.UNIT }}
          REQUIRE_ODDS: ${{ inputs.REQUIRE_ODDS }}
          KEYMAN_ENABLE: ${{ inputs.KEYMAN_ENABLE }}
          FILTERS: ${{ inputs.FILTERS }}
        run: |
          set -euo pipefail
          echo "[pass2] MODE=$MODE  DATE=$DATE PID=$PID"
          ARGS_COMMON="--base public --dates $DATE --pids $PID \
            --sims $SIMS --topn $TOPN \
            --keyman-enable $KEYMAN_ENABLE \
            --ml-root TENKAI/predictions/v1 \
            --filters \"$FILTERS\""
          if [ "$MODE" = "predict" ]; then
            python scripts/sims/sims_integrated.py $ARGS_COMMON --predict-only --outdir scripts/sims
          else
            python scripts/sims/sims_integrated.py $ARGS_COMMON \
              --outdir scripts/sims \
              --odds-base public/odds/v1 \
              --require-odds $REQUIRE_ODDS
          fi

      - name: Commit results into repo
        if: always()
        run: |
          set -e
          git config user.name  github-actions
          git config user.email github-actions@github.com
          git add scripts/sims/pass1 scripts/sims/pass2 TENKAI/predictions/v1/${{ inputs.DATE }}
          git commit -m "sims_integrated: ${{
            inputs.MODE }} DATE=${{ inputs.DATE }} PID=${{ inputs.PID }}" || echo "nothing to commit"
          git push

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sims_outputs_${{ inputs.DATE }}_${{ inputs.PID }}
          path: |
            scripts/sims/pass1/**
            scripts/sims/pass2/**
            TENKAI/predictions/v1/${{ inputs.DATE }}/**
