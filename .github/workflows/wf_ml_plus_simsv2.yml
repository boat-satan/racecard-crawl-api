name: wf_ml_plus_simsv2

on:
  workflow_dispatch:
    inputs:
      DATES:   { description: "YYYYMMDD[,YYYYMMDD...]", required: true, type: string }
      PID:     { description: "場ID(例: 02) or ALL or CSV", required: true, type: string }
      MODE:    { description: "predict or eval", required: true, type: choice, options: ["predict","eval"], default: "eval" }
      SIMS:    { description: "trials per race", required: true, type: string, default: "600" }
      TOPN:    { description: "top-N trifecta", required: true, type: string, default: "18" }
      UNIT:    { description: "unit stake", required: true, type: string, default: "100" }
      OUTDIR:  { description: "output root", required: true, type: string, default: "SimS_v2" }

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas scikit-learn joblib scipy lightgbm

      # DATESとPIDを正規化（PID=ALLなら public/integrated/v1/<date> を走査）
      - name: Resolve inputs
        id: vars
        shell: bash
        run: |
          set -euo pipefail
          DATES="${{ inputs.DATES }}"
          PID_IN="${{ inputs.PID }}"

          # dates -> カンマ区切りそのまま（空白除去）
          DATES_CSV="$(echo "$DATES" | tr -d ' ')"
          echo "dates_csv=$DATES_CSV" >> "$GITHUB_OUTPUT"

          # pids
          if [ "$PID_IN" = "ALL" ]; then
            PIDS=""
            IFS=',' read -r -a ARR <<< "$DATES_CSV"
            for d in "${ARR[@]}"; do
              if [ -d "public/integrated/v1/$d" ]; then
                for p in $(ls public/integrated/v1/$d | sort); do
                  [[ -d "public/integrated/v1/$d/$p" ]] || continue
                  PIDS="$PIDS,$p"
                done
              fi
            done
            PIDS="${PIDS#,}"
            # 重複除去
            PIDS=$(echo "$PIDS" | tr ',' '\n' | sort -u | paste -sd, -)
          else
            PIDS="$(echo "$PID_IN" | tr -d ' ')"
          fi
          echo "pids_csv=$PIDS" >> "$GITHUB_OUTPUT"

          echo "Resolved: dates=[$DATES_CSV], pids=[$PIDS]"

      # 1) ML 予測（単勝+決まり手）を全日付×PIDで実行して TENKAI/predictions/v1 にCSVを出す
      - name: Run TENKAI ML predictions (tansyo+kimarite)
        shell: bash
        run: |
          set -euo pipefail
          DATES="${{ steps.vars.outputs.dates_csv }}"
          PIDS="${{ steps.vars.outputs.pids_csv }}"

          mkdir -p TENKAI
          [ -f TENKAI/__init__.py ] || : > TENKAI/__init__.py

          IFS=',' read -r -a D_ARR <<< "$DATES"
          IFS=',' read -r -a P_ARR <<< "$PIDS"

          for d in "${D_ARR[@]}"; do
            for p in "${P_ARR[@]}"; do
              echo ">>> ML predict date=$d pid=$p (all races)"
              PYTHONPATH="." python TENKAI/tenkai_predict_integrated.py --date "$d" --pid "$p"
            done
          done

          echo "---- predictions done ----"
          ls -R TENKAI/predictions/v1 || true

      # 2) simsv2 を ML 補正付きで実行（predict or eval）
      - name: Run simsv2 (predict/eval with ML adjust)
        shell: bash
        env:
          MODE:   ${{ inputs.MODE }}
          SIMS:   ${{ inputs.SIMS }}
          TOPN:   ${{ inputs.TOPN }}
          UNIT:   ${{ inputs.UNIT }}
          OUTDIR: ${{ inputs.OUTDIR }}
        run: |
          set -euo pipefail
          DATES="${{ steps.vars.outputs.dates_csv }}"
          PIDS="${{ steps.vars.outputs.pids_csv }}"

          ARGS="--base public --dates ${DATES} --pids ${PIDS} --sims ${SIMS} --topn ${TOPN} --unit ${UNIT} --outdir ${OUTDIR} --ml-root TENKAI/predictions/v1"

          echo ">>> simsv2 $MODE"
          if [ "$MODE" = "predict" ]; then
            PYTHONPATH="." python scripts/sims/simsv2.py $ARGS --predict-only
          else
            PYTHONPATH="." python scripts/sims/simsv2.py $ARGS
          fi

      - name: Commit outputs
        if: always()
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git fetch origin
          git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true

          # ML 出力と simsv2 出力をコミット
          git add -A TENKAI/predictions/v1 || true
          git add -A ${{ inputs.OUTDIR }}/pass1 || true
          git diff --cached --quiet || git commit -m "wf_ml_plus_simsv2: ${{ inputs.MODE }} dates=${{ inputs.DATES }} pid=${{ inputs.PID }}"
          git push || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ml_plus_simsv2_${{ inputs.MODE }}_${{ inputs.DATES }}_${{ inputs.PID }}
          path: |
            TENKAI/predictions/v1/**/*
            ${{ inputs.OUTDIR }}/pass1/**/*
          if-no-files-found: warn
