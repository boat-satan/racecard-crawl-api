name: Predict Race

on:
  workflow_dispatch:
    inputs:
      date:
        description: "YYYYMMDD or today"
        required: false
        default: "today"
      pid:
        description: "01..24"
        required: false
        default: "04"
      race:
        description: "1R..12R"
        required: false
        default: "1R"
  schedule:
    - cron: "*/20 13-23 * * *"  # UTC: 22:00-08:59 JST 相当
    - cron: "*/20 0-8 * * *"    # UTC: 09:00-17:59 JST 相当（必要なら調整）

permissions:
  contents: write

concurrency:
  group: predict-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm i --no-audit --no-fund

      - name: Resolve params
        id: p
        run: |
          DATE="${{ github.event.inputs.date }}"
          PID="${{ github.event.inputs.pid }}"
          RACE="${{ github.event.inputs.race }}"
          echo "date=${DATE:-today}" >> $GITHUB_OUTPUT
          echo "pid=${PID:-04}"       >> $GITHUB_OUTPUT
          echo "race=${RACE:-1R}"     >> $GITHUB_OUTPUT

      - name: Run predict
        env:
          DATE: ${{ steps.p.outputs.date }}
          PID:  ${{ steps.p.outputs.pid }}
          RACE: ${{ steps.p.outputs.race }}
        run: |
          mkdir -p out
          node scripts/predict.mjs
          [ -f out/prediction.json ] || echo '{}' > out/prediction.json

      - name: Upload artifact (prediction.json)
        uses: actions/upload-artifact@v4
        with:
          name: predict-output
          path: out/prediction.json
          if-no-files-found: warn
          retention-days: 7

      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "predict: ${{ steps.p.outputs.date }} ${{ steps.p.outputs.pid }} ${{ steps.p.outputs.race }} [skip ci]"
            git pull --rebase --autostash || true
            git push
          else
            echo "No changes."
          fi

      # ---- ここから Slack 通知 ----
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Notify Slack
        if: ${{ success() }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          REPO: ${{ github.repository }}
          DATE_IN: ${{ steps.p.outputs.date }}
          PID:  ${{ steps.p.outputs.pid }}
          RACE: ${{ steps.p.outputs.race }}
        run: |
          # date=today を JST で解決
          if [ "$DATE_IN" = "today" ]; then DATE=$(TZ=Asia/Tokyo date +%Y%m%d); else DATE="$DATE_IN"; fi

          FILE="public/predictions/$DATE/$PID/$RACE.md"
          if [ -f "$FILE" ]; then
            SUMMARY=$(sed -n '1,20p' "$FILE" | sed 's/"/\\"/g')
            URL="https://github.com/$REPO/blob/main/$FILE"
            PAYLOAD=$(jq -n --arg t "🏁 予測 $DATE pid=$PID $RACE" \
                           --arg s "$SUMMARY" --arg u "$URL" \
                           '{text: "\($t)\n\($s)\n\n<\($u)|GitHubで詳細を見る>"}')
          else
            PAYLOAD=$(jq -n --arg t "🏁 予測完了: $DATE pid=$PID $RACE（MD未生成）" '{text:$t}')
          fi

          curl -X POST -H 'Content-type: application/json' \
               --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"
      # ---- Slack 通知ここまで ----
