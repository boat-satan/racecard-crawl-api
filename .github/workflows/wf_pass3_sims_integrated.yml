name: wf_pass3_sims_integrated

on:
  workflow_call:
    inputs:
      DATE:
        required: true
        type: string
      PID:
        required: true
        type: string
      MODE:
        required: true
        type: string
      SIMS:
        required: true
        type: string
      TOPN:
        required: true
        type: string
      UNIT:
        required: true
        type: string
      OUTDIR:
        required: true
        type: string

      # Filters
      F_REQUIRE_ODDS:
        required: false
        type: string
      F_MIN_EV:
        required: false
        type: string
      F_ODDS_BANDS:
        required: false
        type: string
      F_ODDS_MIN:
        required: false
        type: string
      F_ODDS_MAX:
        required: false
        type: string
      F_EXCLUDE_FIRST1:
        required: false
        type: string
      F_ONLY_FIRST1:
        required: false
        type: string
      F_BUY_IN_TOP3:
        required: false
        type: string
      F_BUY_THR:
        required: false
        type: string

      # Keyman
      K_ENABLE:
        required: false
        type: string
      K_THR:
        required: false
        type: string
      K_BOOST:
        required: false
        type: string
      K_AGGR:
        required: false
        type: string

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas joblib scikit-learn

      - name: Run Pass3 (SimS integrated with ML)
        env:
          DATE: ${{ inputs.DATE }}
          PID: ${{ inputs.PID }}
          MODE: ${{ inputs.MODE }}
          SIMS: ${{ inputs.SIMS }}
          TOPN: ${{ inputs.TOPN }}
          UNIT: ${{ inputs.UNIT }}
          OUTDIR: ${{ inputs.OUTDIR }}
          F_REQUIRE_ODDS: ${{ inputs.F_REQUIRE_ODDS }}
          F_MIN_EV: ${{ inputs.F_MIN_EV }}
          F_ODDS_BANDS: ${{ inputs.F_ODDS_BANDS }}
          F_ODDS_MIN: ${{ inputs.F_ODDS_MIN }}
          F_ODDS_MAX: ${{ inputs.F_ODDS_MAX }}
          F_EXCLUDE_FIRST1: ${{ inputs.F_EXCLUDE_FIRST1 }}
          F_ONLY_FIRST1: ${{ inputs.F_ONLY_FIRST1 }}
          F_BUY_IN_TOP3: ${{ inputs.F_BUY_IN_TOP3 }}
          F_BUY_THR: ${{ inputs.F_BUY_THR }}
          K_ENABLE: ${{ inputs.K_ENABLE }}
          K_THR: ${{ inputs.K_THR }}
          K_BOOST: ${{ inputs.K_BOOST }}
          K_AGGR: ${{ inputs.K_AGGR }}
        run: |
          set -euo pipefail
          echo "[pass3] MODE=$MODE DATE=$DATE PID=$PID"
          if [[ "${K_ENABLE,,}" == "false" ]]; then
            K_THR=9.9; K_BOOST=0; K_AGGR=0
          fi

          ARGS_COMMON="--base public --dates $DATE --pids $PID --sims $SIMS --topn $TOPN --keyman-threshold $K_THR --keyman-boost $K_BOOST --keyman-aggr $K_AGGR --ml-root TENKAI/predictions/v1 --outdir $OUTDIR"
          [[ "${F_EXCLUDE_FIRST1,,}" == "true" ]] && ARGS_COMMON="$ARGS_COMMON --exclude-first1"
          [[ "${F_ONLY_FIRST1,,}" == "true" ]] && ARGS_COMMON="$ARGS_COMMON --only-first1"
          [[ "${F_BUY_IN_TOP3,,}" == "true" ]] && ARGS_COMMON="$ARGS_COMMON --buy-if-keyman-in-top3 --buy-keyman-threshold $F_BUY_THR"

          if [[ "$MODE" == "predict" ]]; then
            python scripts/sims/sims_integrated.py $ARGS_COMMON --predict-only
          else
            ARGS_FILTER=""
            [[ -n "$F_ODDS_BANDS" ]] && ARGS_FILTER="$ARGS_FILTER --odds-bands \"$F_ODDS_BANDS\""
            [[ "$F_ODDS_MIN" != "0" ]] && ARGS_FILTER="$ARGS_FILTER --odds-min $F_ODDS_MIN"
            [[ "$F_ODDS_MAX" != "0" ]] && ARGS_FILTER="$ARGS_FILTER --odds-max $F_ODDS_MAX"
            [[ "${F_REQUIRE_ODDS,,}" == "true" ]] && ARGS_FILTER="$ARGS_FILTER --require-odds"
            [[ "$F_MIN_EV" != "0" ]] && ARGS_FILTER="$ARGS_FILTER --min-ev $F_MIN_EV"
            eval python scripts/sims/sims_integrated.py $ARGS_COMMON --odds-base public/odds/v1 $ARGS_FILTER
          fi

      - name: Aggregate & write overall.json
        run: |
          set -euo pipefail
          python scripts/sims/aggregate_overall.py "${{ inputs.OUTDIR }}" "${{ inputs.DATE }}" "${{ inputs.MODE }}" "${{ inputs.UNIT }}" "${{ inputs.SIMS }}" "${{ inputs.TOPN }}" "${{ inputs.PID }}"

      - name: Commit results
        if: always()
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ${{ inputs.OUTDIR }}/pass2 || true
          git commit -m "wf_pass3: write overall.json for ${{ inputs.DATE }} PID=${{ inputs.PID }}" || echo "nothing to commit"
          git push || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wf_pass3_outputs_${{ inputs.DATE }}_${{ inputs.PID }}
          path: ${{ inputs.OUTDIR }}/pass2/**
