name: Build TENKAI C features

on:
  workflow_dispatch:
    inputs:
      date:
        description: '対象日 (YYYYMMDD)'
        required: true
      pid:
        description: '場コード pid (例: 02 / ALL)'
        required: true
      race:
        description: 'レース (例: 1R) 空なら全R'
        required: false
        default: ''

permissions:
  contents: write

concurrency:
  group: tenkai-c-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-c-features:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install pandas

      - name: Sanity check
        run: |
          test -f TENKAI/features_c.py || { echo "TENKAI/features_c.py がありません"; exit 1; }

      - name: Ensure TENKAI package
        run: |
          mkdir -p TENKAI
          [ -f TENKAI/__init__.py ] || printf "" > TENKAI/__init__.py

      - name: Build C features (supports ALL)
        shell: bash
        env:
          DATE: ${{ github.event.inputs.date }}
          PID:  ${{ github.event.inputs.pid }}
          RACE: ${{ github.event.inputs.race }}
        run: |
          set -euo pipefail
          BASE="public/integrated/v1"
          PYTHONPATH=.

          build_one() {
            local d="$1" p="$2" r="${3:-}"
            local r_opt=""
            if [ -n "$r" ]; then r_opt="--race $r"; fi
            echo ">>> run: python TENKAI/features_c.py --date $d --pid $p $r_opt"
            PYTHONPATH="$PYTHONPATH" python TENKAI/features_c.py --date "$d" --pid "$p" $r_opt || true
          }

          if [ "${PID}" = "ALL" ]; then
            # 指定日の配下にある pid を総当たり
            if [ ! -d "${BASE}/${DATE}" ]; then
              echo "No integrated data for ${DATE}"; exit 0
            fi
            for dir in "${BASE}/${DATE}"/*; do
              [ -d "$dir" ] || continue
              p="$(basename "$dir")"
              build_one "${DATE}" "${p}" "${RACE}"
            done
          else
            # 単一 pid
            build_one "${DATE}" "${PID}" "${RACE}"
          fi

      - name: List outputs (debug)
        run: |
          echo "---- generated files ----"
          ls -R TENKAI || true

      - name: Commit outputs
        shell: bash
        env:
          DATE: ${{ github.event.inputs.date }}
          PID:  ${{ github.event.inputs.pid }}
          RACE: ${{ github.event.inputs.race }}
        run: |
          set -euo pipefail
          FILES="$(find TENKAI/features_c/v1/${DATE} -type f -name '*.csv' -print 2>/dev/null || true)"
          if [ -n "$FILES" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            # 生成された実ファイルだけ add
            git add $FILES
            # 変更があればコミット
            git diff --cached --quiet || git commit -m "TENKAI C features: ${DATE} pid=${PID} race=${RACE:-ALL}"
            # リモート競合に強い push（必要ならrebaseして再push）
            set +e
            git push
            if [ $? -ne 0 ]; then
              set -e
              git fetch origin
              git pull --rebase origin "${GITHUB_REF_NAME}"
              git push
            fi
          else
            echo "No CSV generated; skip commit."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tenkai-c-${{ github.event.inputs.date }}-${{ github.event.inputs.pid }}${{ github.event.inputs.race && format('-{0}', github.event.inputs.race) || '' }}
          path: TENKAI/features_c/v1/${{ github.event.inputs.date }}/**/*.csv
          if-no-files-found: warn
