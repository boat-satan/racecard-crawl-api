# .github/workflows/unified_pipeline.yml
name: Unified Sims (crawl→integrate→predict)

on:
  workflow_dispatch:
    inputs:
      date:
        description: "YYYYMMDD（空=JSTの今日）"
        required: false
        default: ""
      pids:
        description: "場コード（,区切り / 例: 01,04,24。空=全場）"
        required: false
        default: ""
      races:
        description: "レース（,区切り / 例: 1R,2R。空=全レース）"
        required: false
        default: ""
      sims:
        description: "試行回数（predict）"
        required: false
        default: "1200"
      topn:
        description: "上位N（predict）"
        required: false
        default: "18"
      limit:
        description: "先頭からNレースだけ処理（0=全件）"
        required: false
        default: "0"

permissions:
  contents: write

concurrency:
  group: unified-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # 0) 展示クロール（全場まとめて）
  crawl:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.resolve.outputs.DATE }}
      pids: ${{ steps.resolve.outputs.PIDS }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Install deps
        run: npm ci || npm i --no-audit --no-fund

      - name: Resolve inputs (DATE / PIDS)
        id: resolve
        shell: bash
        run: |
          DATE="${{ inputs.date }}"
          if [ -z "$DATE" ]; then
            DATE=$(TZ=Asia/Tokyo date +'%Y%m%d')
          fi
          if [ -z "${{ inputs.pids }}" ]; then
            PIDS="01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24"
          else
            PIDS="${{ inputs.pids }}"
          fi
          echo "Resolved: DATE=$DATE PIDS=$PIDS"
          echo "DATE=$DATE" >> "$GITHUB_OUTPUT"
          echo "PIDS=$PIDS" >> "$GITHUB_OUTPUT"

      - name: Run direct exhibition crawler (AUTO_T15)
        shell: bash
        run: |
          node scripts/fetch-exhibition-direct.js "${{ steps.resolve.outputs.DATE }}" "${{ steps.resolve.outputs.PIDS }}" auto --skip-existing

      - name: Commit & push exhibitions
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "unified: exhibition ${{ steps.resolve.outputs.DATE }} ${{ steps.resolve.outputs.PIDS }} [skip ci]"
            git pull --rebase
            git push
          else
            echo "No changes."
          fi

  # 1) 統合
  integrate:
    needs: crawl
    runs-on: ubuntu-latest
    outputs:
      date:   ${{ steps.echo.outputs.DATE }}
      pids:   ${{ steps.echo.outputs.PIDS }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Pull latest after crawl
        run: git pull --rebase

      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Install deps
        run: npm ci || npm i --no-audit --no-fund

      - name: Echo inputs for next jobs
        id: echo
        run: |
          echo "DATE=${{ needs.crawl.outputs.date }}" >> "$GITHUB_OUTPUT"
          echo "PIDS=${{ needs.crawl.outputs.pids }}" >> "$GITHUB_OUTPUT"

      - name: Integrate all (program+exhibition+stats ready)
        shell: bash
        run: |
          set -euo pipefail
          DATE="${{ needs.crawl.outputs.date }}"
          STATS_DIR="public/stats/v2/racers"

          IFS=',' read -ra VEN_ARR <<< "${{ needs.crawl.outputs.pids }}"
          VENUES="${VEN_ARR[@]}"
          RACES=$(seq 1 12 | sed 's/$/R/')

          for PID in $VENUES; do
            for RACE in $RACES; do
              PROG="public/programs/v2/$DATE/$PID/$RACE.json"
              EXH="public/exhibition/v1/$DATE/$PID/$RACE.json"
              OUT="public/integrated/v1/$DATE/$PID/$RACE.json"

              if [ -f "$OUT" ]; then
                echo "[$PID $RACE] already integrated, skip"; continue
              fi
              if [ ! -f "$PROG" ] || [ ! -f "$EXH" ]; then
                echo "[$PID $RACE] missing program or exhibition, skip"; continue
              fi

              node -e "
                const fs=require('fs');
                const progPath='$PROG';
                const statsDir='$STATS_DIR';
                let ok=true;
                try {
                  const j=JSON.parse(fs.readFileSync(progPath,'utf8'));
                  const entries=(j.entries||j.boats||[]);
                  for(const e of entries){
                    const n=Number(e.number ?? e.racer_number ?? e.id);
                    if(!n) continue;
                    const f=\`\${statsDir}/\${n}.json\`;
                    if(!fs.existsSync(f)){ ok=false; break; }
                  }
                } catch(err) { ok=false; }
                process.exit(ok?0:2);
              " || { echo "[$PID $RACE] missing stats, skip"; continue; }

              echo "[$PID $RACE] integrating..."
              node scripts/integrate-once.mjs --date "$DATE" --pid "$PID" --race "$RACE"
            done
          done

      - name: Commit & push integrated
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/integrated/v1/** || true
          if ! git diff --cached --quiet; then
            git commit -m "unified: integrate all ${{ needs.crawl.outputs.date }} [skip ci]"
            git pull --rebase
            git push
          else
            echo "No changes."
          fi
