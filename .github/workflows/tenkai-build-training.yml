name: Build TENKAI training table

on:
  workflow_dispatch:
    inputs:
      date:
        description: '対象日 (YYYYMMDD)'
        required: true
      pid:
        description: '場コード pid (例: 02)'
        required: true
      race:
        description: 'レース (例: 2R) 空/ALL なら全R'
        required: false
        default: ''

permissions:
  contents: write

concurrency:
  group: tenkai-train-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-train:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      - name: Ensure TENKAI package
        run: |
          mkdir -p TENKAI
          [ -f TENKAI/__init__.py ] || printf "" > TENKAI/__init__.py

      - name: Build training table
        shell: bash
        run: |
          set -euo pipefail
          DATE="${{ github.event.inputs.date }}"
          PID="${{ github.event.inputs.pid }}"
          RACE="${{ github.event.inputs.race }}"
          RACE_OPT=""
          if [ -n "${RACE}" ] && [ "${RACE}" != "ALL" ]; then
            RACE_OPT="--race ${RACE}"
          fi

          echo ">>> run: python TENKAI/build_training_table.py --date ${DATE} --pid ${PID} ${RACE_OPT}"
          PYTHONPATH="." python TENKAI/build_training_table.py --date "${DATE}" --pid "${PID}" ${RACE_OPT}

      - name: Commit outputs
        shell: bash
        run: |
          set -euo pipefail
          DATE="${{ github.event.inputs.date }}"
          PID="${{ github.event.inputs.pid }}"
          RACE="${{ github.event.inputs.race }}"

          # ALL/空 なら pid配下全体、それ以外は特定レースのファイルのみ
          if [ -z "${RACE}" ] || [ "${RACE}" = "ALL" ]; then
            OUTDIR="TENKAI/datasets/v1/${DATE}/${PID}"
          else
            OUTDIR="TENKAI/datasets/v1/${DATE}/${PID}/${RACE}"
          fi

          echo ">>> OUTDIR=${OUTDIR}"
          if [ -d "${OUTDIR}" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git fetch origin
            git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
            git add "${OUTDIR}"/** || true
            git diff --cached --quiet || git commit -m "TENKAI training: ${DATE} pid=${PID} ${RACE}"
            git push || true
          else
            echo "OUTDIR not found, nothing to commit."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tenkai-train-${{ github.event.inputs.date }}-${{ github.event.inputs.pid }}${{ github.event.inputs.race && format('-{0}', github.event.inputs.race) || '' }}
          path: ${{ (github.event.inputs.race == '' || github.event.inputs.race == 'ALL')
                    && format('TENKAI/datasets/v1/{0}/{1}/**', github.event.inputs.date, github.event.inputs.pid)
                    || format('TENKAI/datasets/v1/{0}/{1}/{2}/**', github.event.inputs.date, github.event.inputs.pid, github.event.inputs.race) }}
          if-no-files-found: warn
