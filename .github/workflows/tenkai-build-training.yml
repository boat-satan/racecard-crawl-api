name: Build TENKAI training table

on:
  workflow_dispatch:
    inputs:
      date:
        description: '対象日 (YYYYMMDD)'
        required: true
      pid:
        description: '場コード pid (例: 02) / ALL で全場'
        required: true
      race:
        description: 'レース (例: 2R) 空/ALL なら全R'
        required: false
        default: ''

permissions:
  contents: write

concurrency:
  group: tenkai-train-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-train:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      - name: Ensure TENKAI package
        run: |
          mkdir -p TENKAI
          [ -f TENKAI/__init__.py ] || printf "" > TENKAI/__init__.py

      - name: Build training table (supports pid=ALL; outputs tansyo+kimarite)
        shell: bash
        run: |
          set -euo pipefail
          DATE="${{ github.event.inputs.date }}"
          PID_IN="${{ github.event.inputs.pid }}"
          RACE_IN="${{ github.event.inputs.race }}"
          RACE_OPT=""
          if [ -n "${RACE_IN}" ] && [ "${RACE_IN}" != "ALL" ]; then
            RACE_OPT="--race ${RACE_IN}"
          fi

          # pid=ALL の展開（features_c or labels に存在する場を探索）
          if [ "${PID_IN}" = "ALL" ]; then
            echo ">>> pid=ALL: detect pids for date=${DATE}"
            mapfile -t PIDS < <(ls -1d TENKAI/features_c/v1/${DATE}/* 2>/dev/null | xargs -n1 basename || true)
            if [ ${#PIDS[@]} -eq 0 ]; then
              mapfile -t PIDS < <(ls -1d TENKAI/labels/v1/${DATE}/* 2>/dev/null | xargs -n1 basename || true)
            fi
          else
            PIDS=("${PID_IN}")
          fi

          if [ ${#PIDS[@]} -eq 0 ]; then
            echo "no pid found for ${DATE}"
            exit 0
          fi

          echo ">>> targets: ${PIDS[*]}"
          for PID in "${PIDS[@]}"; do
            echo ">>> run: python TENKAI/build_training_table.py --date ${DATE} --pid ${PID} ${RACE_OPT}"
            # build_training_table.py はデフォルトで --task both（単勝+決まり手）を出力
            PYTHONPATH="." python TENKAI/build_training_table.py --date "${DATE}" --pid "${PID}" ${RACE_OPT} || true
          done

      - name: Commit outputs (tansyo + kimarite)
        shell: bash
        run: |
          set -euo pipefail
          DATE="${{ github.event.inputs.date }}"
          PID_IN="${{ github.event.inputs.pid }}"
          RACE_IN="${{ github.event.inputs.race }}"

          # 追加パス（単勝/決まり手）の両方を用意
          if [ "${PID_IN}" = "ALL" ]; then
            ADD_PATH1="TENKAI/datasets/v1/${DATE}/**"
            ADD_PATH2="TENKAI/datasets_kimarite/v1/${DATE}/**"
          else
            if [ -z "${RACE_IN}" ] || [ "${RACE_IN}" = "ALL" ]; then
              ADD_PATH1="TENKAI/datasets/v1/${DATE}/${PID_IN}/**"
              ADD_PATH2="TENKAI/datasets_kimarite/v1/${DATE}/${PID_IN}/**"
            else
              ADD_PATH1="TENKAI/datasets/v1/${DATE}/${PID_IN}/${RACE_IN}*"
              ADD_PATH2="TENKAI/datasets_kimarite/v1/${DATE}/${PID_IN}/${RACE_IN}*"
            fi
          fi
          echo ">>> git add:"
          echo "    ${ADD_PATH1}"
          echo "    ${ADD_PATH2}"

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
          git add ${ADD_PATH1} || true
          git add ${ADD_PATH2} || true
          git diff --cached --quiet || git commit -m "TENKAI training: ${DATE} pid=${PID_IN} race=${RACE_IN} (tansyo+kimarite)"
          git push || true

      - name: Upload artifacts (tansyo)
        uses: actions/upload-artifact@v4
        with:
          name: tenkai-train-tansyo-${{ github.event.inputs.date }}-${{ github.event.inputs.pid }}${{ github.event.inputs.race && format('-{0}', github.event.inputs.race) || '' }}
          path: ${{ (github.event.inputs.pid == 'ALL')
                    && format('TENKAI/datasets/v1/{0}/**', github.event.inputs.date)
                    || ((github.event.inputs.race == '' || github.event.inputs.race == 'ALL')
                          && format('TENKAI/datasets/v1/{0}/{1}/**', github.event.inputs.date, github.event.inputs.pid)
                          || format('TENKAI/datasets/v1/{0}/{1}/{2}*', github.event.inputs.date, github.event.inputs.pid, github.event.inputs.race)) }}
          if-no-files-found: warn

      - name: Upload artifacts (kimarite)
        uses: actions/upload-artifact@v4
        with:
          name: tenkai-train-kimarite-${{ github.event.inputs.date }}-${{ github.event.inputs.pid }}${{ github.event.inputs.race && format('-{0}', github.event.inputs.race) || '' }}
          path: ${{ (github.event.inputs.pid == 'ALL')
                    && format('TENKAI/datasets_kimarite/v1/{0}/**', github.event.inputs.date)
                    || ((github.event.inputs.race == '' || github.event.inputs.race == 'ALL')
                          && format('TENKAI/datasets_kimarite/v1/{0}/{1}/**', github.event.inputs.date, github.event.inputs.pid)
                          || format('TENKAI/datasets_kimarite/v1/{0}/{1}/{2}*', github.event.inputs.date, github.event.inputs.pid, github.event.inputs.race)) }}
          if-no-files-found: warn
