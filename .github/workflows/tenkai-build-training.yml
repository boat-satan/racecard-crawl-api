name: Build TENKAI training table

on:
  workflow_dispatch:
    inputs:
      date:
        description: '対象日 (YYYYMMDD)'
        required: true
      pid:
        description: '場コード pid (例: 02)'
        required: true
      race:
        description: 'レース (例: 2R) 空 or ALL で全R'
        required: false
        default: ''

permissions:
  contents: write

concurrency:
  group: tenkai-train-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      - name: Sanity check
        run: |
          test -f TENKAI/build_training_table.py || { echo "TENKAI/build_training_table.py がありません"; exit 1; }

      - name: Ensure TENKAI package
        run: |
          mkdir -p TENKAI
          [ -f TENKAI/__init__.py ] || printf "" > TENKAI/__init__.py

      - name: Build training table
        shell: bash
        run: |
          set -euo pipefail
          RACE_IN="${{ github.event.inputs.race }}"
          # 空 or "ALL" は全R扱い
          if [ -z "${RACE_IN}" ] || [ "${RACE_IN}" = "ALL" ]; then
            echo ">>> race: ALL (1R..12R を処理)"
            RACE_OPT=""
          else
            echo ">>> race: ${RACE_IN}"
            RACE_OPT="--race ${RACE_IN}"
          fi
          echo ">>> cmd:"
          echo PYTHONPATH=. python TENKAI/build_training_table.py --date ${{ github.event.inputs.date }} --pid ${{ github.event.inputs.pid }} ${RACE_OPT}
          PYTHONPATH="." python TENKAI/build_training_table.py \
            --date ${{ github.event.inputs.date }} \
            --pid  ${{ github.event.inputs.pid }} \
            ${RACE_OPT}

      - name: Commit outputs
        shell: bash
        run: |
          set -euo pipefail
          OUTDIR="TENKAI/datasets/v1/${{ github.event.inputs.date }}/${{ github.event.inputs.pid }}"
          echo ">>> OUTDIR=${OUTDIR}"
          if [ -d "${OUTDIR}" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git fetch origin
            git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
            git add "${OUTDIR}"/** || true
            git diff --cached --quiet || git commit -m "TENKAI training: ${{ github.event.inputs.date }} pid=${{ github.event.inputs.pid }} ${{ github.event.inputs.race }}"
            git push || true
          else
            echo "OUTDIR not found, nothing to commit."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tenkai-train-${{ github.event.inputs.date }}-${{ github.event.inputs.pid }}${{ github.event.inputs.race && format('-{0}', github.event.inputs.race) || '' }}
          path: TENKAI/datasets/v1/${{ github.event.inputs.date }}/${{ github.event.inputs.pid }}/**
          if-no-files-found: warn
